version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: normaldb-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-normaldb}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-normaldb_secret}
      POSTGRES_DB: ${POSTGRES_DB:-normaldb}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U normaldb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - normaldb-network

  # Backend API (Node.js/Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: normaldb-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-3001}
      DATABASE_URL: postgresql://${POSTGRES_USER:-normaldb}:${POSTGRES_PASSWORD:-normaldb_secret}@postgres:5432/${POSTGRES_DB:-normaldb}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_change_in_production}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    volumes:
      - ./backend/src:/app/src
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - normaldb-network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: normaldb-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - normaldb-network

networks:
  normaldb-network:
    driver: bridge

volumes:
  postgres_data:
